spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/order_service
spring.datasource.username = debian-sys-maint
spring.datasource.password = FPxcMjzUnN32dg8V
spring.jpa.hibernate.ddl-auto = update
server.port = 0

spring.application.name=order-service
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

#CIRCUIT BREAKER CONFIGURATION
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always

#RESILIENCE4J PROPERTIES
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-size=5
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.CircuitBreakerService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.CircuitBreakerService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.CircuitBreakerService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.CircuitBreakerService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.CircuitBreakerService.permitted-number-of-calls-in-half-open-state=3

#RESILIENCE4J TIMEOUT PROPERTIES
resilience4j.timelimiter.instances.inventory.timeout-duration=3s


#RESILIENCE4J RETRY PROPERTIES
resilience4j.retry.instances.inventory.retryApi.max-attempts=3
resilience4j.retry.instances.inventory.retryApi.wait-duration=5s
resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.metrics.enabled=true

#DISTRIBUTED TRACING CONFIGURATION
management.tracing.sampling.probability=1.0

#APACHE KAFKA PROPERTIES
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization=StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.orderService.orderService.event.OrderPlacedEvent
#spring.kafka.consumer.group-id=myGroup
